// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  name     String 
  email    String @unique
  password String

  tenant Tenant[]
  client client[]

  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @db.Timestamptz(6)
}


model Tenant {
  id String @id @default(uuid())

  name String
  slug String @unique
  tipoPessoa String?
  cpf_cnpj String?
  contato String?
  email String?
  telefone String?
  celular String?
  cep String?
  logradouro String?
  numero String?
  complemento String?
  bairro String?
  cidade String?
  uf String?

  user User @relation(fields: [userId], references: [id])
  userId String

  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @db.Timestamptz(6)
}

model client {
  id String @id @default(uuid())

  name String
  tipoPessoa String?
  cpf_cnpj String?
  contato String?
  email String?
  telefone String?
  celular String?
  cep String?
  logradouro String?
  numero String?
  complemento String?
  bairro String?
  cidade String?
  uf String?

  user User @relation(fields: [userId], references: [id])
  userId String

  tenantSlug String

  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @db.Timestamptz(6)
}

model service {
  id String @id @default(uuid())

  tenantSlug String

  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @db.Timestamptz(6)
}
